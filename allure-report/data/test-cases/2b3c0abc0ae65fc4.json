{"uid":"2b3c0abc0ae65fc4","name":"test_create_pet","fullName":"tests.api.test_reqres_enpoints.TestReqResEndpoints#test_create_pet","historyId":"4cdebf693429381d9fbb925649b87a45","time":{"start":1744543250164,"stop":1744543251160,"duration":996},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <test_reqres_enpoints.TestReqResEndpoints object at 0xffff8a097a10>\nbase_url = 'https://petstore.swagger.io/v2'\ngenerate_faker_data = {'email': 'gureverast@example.org', 'firstname': 'Акулина', 'id': 2, 'lastname': 'Комиссаров', ...}\n\n    def test_create_pet(self, base_url, generate_faker_data):\n        with allure.step(f'Отправляем запрос на создание питомца {generate_faker_data[\"username\"]}'):\n            statuses = ['available', 'sold']\n            data = {\n                \"id\": generate_faker_data['id'],\n                \"category\": {\n                    \"id\": random.randint(4, 444),\n                    \"name\": \"CATS\"\n                },\n                \"name\": faker.first_name(),\n                \"photoUrls\": [\n                    None\n                ],\n                \"tags\": [\n                    {\n                        \"id\": random.randint(3, 333),\n                        \"name\": \"CATS\"\n                    }\n                ],\n                \"status\": random.choice(statuses)\n            }\n    \n            response = requests.post(f'{base_url}/pet', json=data)\n            assert response.status_code == 200, \"Ошибка создания животного\"\n            assert data['name'] == response.json()['name']\n    \n            response_get_pet = requests.get(f'{base_url}/pet/{data[\"id\"]}')\n>           assert response_get_pet.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests/api/test_reqres_enpoints.py:52: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744543250111,"stop":1744543250163,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"generate_faker_data","time":{"start":1744543250164,"stop":1744543250164,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"base_url","time":{"start":1744543250164,"stop":1744543250164,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <test_reqres_enpoints.TestReqResEndpoints object at 0xffff8a097a10>\nbase_url = 'https://petstore.swagger.io/v2'\ngenerate_faker_data = {'email': 'gureverast@example.org', 'firstname': 'Акулина', 'id': 2, 'lastname': 'Комиссаров', ...}\n\n    def test_create_pet(self, base_url, generate_faker_data):\n        with allure.step(f'Отправляем запрос на создание питомца {generate_faker_data[\"username\"]}'):\n            statuses = ['available', 'sold']\n            data = {\n                \"id\": generate_faker_data['id'],\n                \"category\": {\n                    \"id\": random.randint(4, 444),\n                    \"name\": \"CATS\"\n                },\n                \"name\": faker.first_name(),\n                \"photoUrls\": [\n                    None\n                ],\n                \"tags\": [\n                    {\n                        \"id\": random.randint(3, 333),\n                        \"name\": \"CATS\"\n                    }\n                ],\n                \"status\": random.choice(statuses)\n            }\n    \n            response = requests.post(f'{base_url}/pet', json=data)\n            assert response.status_code == 200, \"Ошибка создания животного\"\n            assert data['name'] == response.json()['name']\n    \n            response_get_pet = requests.get(f'{base_url}/pet/{data[\"id\"]}')\n>           assert response_get_pet.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests/api/test_reqres_enpoints.py:52: AssertionError","steps":[{"name":"Отправляем запрос на создание питомца naum_76","time":{"start":1744543250164,"stop":1744543251155,"duration":991},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code\n","statusTrace":"  File \"/usr/workspace/tests/api/test_reqres_enpoints.py\", line 52, in test_create_pet\n    assert response_get_pet.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_reqres_enpoints"},{"name":"subSuite","value":"TestReqResEndpoints"},{"name":"host","value":"0926a2b572ed"},{"name":"thread","value":"7-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_reqres_enpoints"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"2b3c0abc0ae65fc4.json","parameterValues":[]}