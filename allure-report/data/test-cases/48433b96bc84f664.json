{
  "uid" : "48433b96bc84f664",
  "name" : "test_create_pet",
  "fullName" : "tests.api.test_reqres_enpoints.TestReqResEndpoints#test_create_pet",
  "historyId" : "4cdebf693429381d9fbb925649b87a45",
  "time" : {
    "start" : 1744542216263,
    "stop" : 1744542217269,
    "duration" : 1006
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'CatTest' == 'Агафон'\n  \n  - Агафон\n  + CatTest",
  "statusTrace" : "self = <test_reqres_enpoints.TestReqResEndpoints object at 0xffffb5f77140>\nbase_url = 'https://petstore.swagger.io/v2'\ngenerate_faker_data = {'email': 'xblohina@example.com', 'firstname': 'Аникита', 'id': 2, 'lastname': 'Филиппов', ...}\n\n    def test_create_pet(self, base_url, generate_faker_data):\n        with allure.step(f'Отправляем запрос на создание питомца {generate_faker_data[\"username\"]}'):\n            statuses = ['available', 'sold']\n            data = {\n                \"id\": generate_faker_data['id'],\n                \"category\": {\n                    \"id\": random.randint(4, 444),\n                    \"name\": \"CATS\"\n                },\n                \"name\": faker.first_name(),\n                \"photoUrls\": [\n                    None\n                ],\n                \"tags\": [\n                    {\n                        \"id\": random.randint(3, 333),\n                        \"name\": \"CATS\"\n                    }\n                ],\n                \"status\": random.choice(statuses)\n            }\n    \n            response = requests.post(f'{base_url}/pet', json=data)\n            assert response.status_code == 200, \"Ошибка создания животного\"\n            assert data['name'] == response.json()['name']\n    \n            response_get_pet = requests.get(f'{base_url}/pet/{data[\"id\"]}')\n            assert response_get_pet.status_code == 200\n>           assert response_get_pet.json()['name'] == data['name']\nE           AssertionError: assert 'CatTest' == 'Агафон'\nE             \nE             - Агафон\nE             + CatTest\n\ntests/api/test_reqres_enpoints.py:53: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1744542216263,
      "stop" : 1744542216263,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1744542216208,
      "stop" : 1744542216263,
      "duration" : 55
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "generate_faker_data",
    "time" : {
      "start" : 1744542216263,
      "stop" : 1744542216263,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'CatTest' == 'Агафон'\n  \n  - Агафон\n  + CatTest",
    "statusTrace" : "self = <test_reqres_enpoints.TestReqResEndpoints object at 0xffffb5f77140>\nbase_url = 'https://petstore.swagger.io/v2'\ngenerate_faker_data = {'email': 'xblohina@example.com', 'firstname': 'Аникита', 'id': 2, 'lastname': 'Филиппов', ...}\n\n    def test_create_pet(self, base_url, generate_faker_data):\n        with allure.step(f'Отправляем запрос на создание питомца {generate_faker_data[\"username\"]}'):\n            statuses = ['available', 'sold']\n            data = {\n                \"id\": generate_faker_data['id'],\n                \"category\": {\n                    \"id\": random.randint(4, 444),\n                    \"name\": \"CATS\"\n                },\n                \"name\": faker.first_name(),\n                \"photoUrls\": [\n                    None\n                ],\n                \"tags\": [\n                    {\n                        \"id\": random.randint(3, 333),\n                        \"name\": \"CATS\"\n                    }\n                ],\n                \"status\": random.choice(statuses)\n            }\n    \n            response = requests.post(f'{base_url}/pet', json=data)\n            assert response.status_code == 200, \"Ошибка создания животного\"\n            assert data['name'] == response.json()['name']\n    \n            response_get_pet = requests.get(f'{base_url}/pet/{data[\"id\"]}')\n            assert response_get_pet.status_code == 200\n>           assert response_get_pet.json()['name'] == data['name']\nE           AssertionError: assert 'CatTest' == 'Агафон'\nE             \nE             - Агафон\nE             + CatTest\n\ntests/api/test_reqres_enpoints.py:53: AssertionError",
    "steps" : [ {
      "name" : "Отправляем запрос на создание питомца orest1995",
      "time" : {
        "start" : 1744542216263,
        "stop" : 1744542217266,
        "duration" : 1003
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 'CatTest' == 'Агафон'\n  \n  - Агафон\n  + CatTest\n",
      "statusTrace" : "  File \"/usr/workspace/tests/api/test_reqres_enpoints.py\", line 53, in test_create_pet\n    assert response_get_pet.json()['name'] == data['name']\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests.api"
  }, {
    "name" : "suite",
    "value" : "test_reqres_enpoints"
  }, {
    "name" : "subSuite",
    "value" : "TestReqResEndpoints"
  }, {
    "name" : "host",
    "value" : "29f6fd4c3577"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.api.test_reqres_enpoints"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "48433b96bc84f664.json",
  "parameterValues" : [ ]
}